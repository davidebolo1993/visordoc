(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{385:function(e,t,a){"use strict";a.r(t);var r=a(45),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"general-usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#general-usage"}},[e._v("#")]),e._v(" General usage")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/davidebolo1993/VISOR",target:"_blank",rel:"noopener noreferrer"}},[e._v("VISOR"),a("OutboundLink")],1),e._v(" is built on 3 modules:")]),e._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://github.com/davidebolo1993/VISOR/tree/master/VISOR/HACk",target:"_blank",rel:"noopener noreferrer"}},[e._v("HACk"),a("OutboundLink")],1),e._v(", the 'HAplotype Creator'")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/davidebolo1993/VISOR/tree/master/VISOR/SHORtS",target:"_blank",rel:"noopener noreferrer"}},[e._v("SHORtS"),a("OutboundLink")],1),e._v(", the 'SHOrt Reads Simulator'")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/davidebolo1993/VISOR/tree/master/VISOR/LASeR",target:"_blank",rel:"noopener noreferrer"}},[e._v("LASeR"),a("OutboundLink")],1),e._v(", the 'Long reAdS simulatoR'")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/davidebolo1993/VISOR/tree/master/VISOR/XENIA",target:"_blank",rel:"noopener noreferrer"}},[e._v("XENIA"),a("OutboundLink")],1),e._v(", the '10X gENomics sImulAtor' [BETA]")])]),e._v(" "),a("h2",{attrs:{id:"visor-hack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#visor-hack"}},[e._v("#")]),e._v(" VISOR HACk")]),e._v(" "),a("p",[e._v("HACk allows users to insert haplotype-specific structural and small/single-nucleotide variants in a "),a("a",{attrs:{href:"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=BlastHelp",target:"_blank",rel:"noopener noreferrer"}},[e._v("FASTA"),a("OutboundLink")],1),e._v(" reference template once a proper file in "),a("a",{attrs:{href:"https://www.ensembl.org/info/website/upload/bed.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("BED"),a("OutboundLink")],1),e._v("-like format describing these variants is provided.")]),e._v(" "),a("h3",{attrs:{id:"hack-bed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hack-bed"}},[e._v("#")]),e._v(" HACk BED")]),e._v(" "),a("p",[e._v("HACk requires a BED with 6 columns, like the one provided "),a("a",{attrs:{href:"https://github.com/davidebolo1993/VISOR/blob/master/Examples/HACk.bed",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(". Each entry describes a structural or small/single-nucleotide variant.")]),e._v(" "),a("ol",[a("li",[e._v("Column 1 contains the name of the chromosome")]),e._v(" "),a("li",[e._v("Column 2 contains the start coordinate (the breakpoint-1 coordinate for insertions and de novo tandem repeat creation)")]),e._v(" "),a("li",[e._v("Column 3 contains the end coordinate (the breakpoint coordinate for insertions and de novo tandem repeat creation)")]),e._v(" "),a("li",[e._v("Column 4 contains the type of the variant. Users can choose between:\n"),a("ul",[a("li",[e._v("deletion (delete from start to end)")]),e._v(" "),a("li",[e._v("inversion (invert from start to end)")]),e._v(" "),a("li",[e._v("tandem duplication (duplicate from start to end)")]),e._v(" "),a("li",[e._v("inverted tandem duplication (duplicate from start to end and invert duplicated segment)")]),e._v(" "),a("li",[e._v("insertion (insert sequence immediately after end)")]),e._v(" "),a("li",[e._v("tandem repeat expansion (expand a pre-existent microsatellite, with start and end coordinates specified as in "),a("a",{attrs:{href:"https://raw.githubusercontent.com/davidebolo1993/VISOR/master/Examples/GRCh38.microsatellites.bed",target:"_blank",rel:"noopener noreferrer"}},[e._v("this example"),a("OutboundLink")],1),e._v(" for human hg38 reference genome)")]),e._v(" "),a("li",[e._v("tandem repeat contraction (contract a pre-existent microsatellite, as above)")]),e._v(" "),a("li",[e._v("perfect tandem repetition (insert a new perfect tandem repetition immediately after end)")]),e._v(" "),a("li",[e._v("approximate tandem repetition (insert a new approximate tandem repetition immediately after end)")]),e._v(" "),a("li",[e._v("translocation cut-paste (translocate and delete from start to end)")]),e._v(" "),a("li",[e._v("translocation copy-paste (alias 'interspersed duplication' is also accepted. Translocate from start to end)")]),e._v(" "),a("li",[e._v("reciprocal translocation (translocate from start to end and replace translocated region with another)")]),e._v(" "),a("li",[e._v("SNP (generate a SNP in end)")]),e._v(" "),a("li",[e._v("MNP (generate multiple SNPs from start to end)")])])]),e._v(" "),a("li",[e._v("Column 5 contains the information for the variant. Must follow the rules below:\n"),a("ul",[a("li",[e._v("for deletion and inversion, must be None (means, no other information to add. Exceptionally, for users who want to simulate 1bp deletions, column 5 can be '1bp', which means that the end coordinate is not included in the deletion)")]),e._v(" "),a("li",[e._v("for tandem duplication and inverted tandem duplication, must be an integer, specifying the number of times the region have to be duplicated")]),e._v(" "),a("li",[e._v("for insertion, must be a string of valid DNA nucleotides")]),e._v(" "),a("li",[e._v("for tandem repeat expansion and tandem repeat contraction, must be a string with motif to expand or contract (M) and number of motifs to add or remove (N), in the format M:N")]),e._v(" "),a("li",[e._v("for perfect tandem repetition, must be a string with the repetition motif (M) and the number of motifs to insert (N), in the format M:N")]),e._v(" "),a("li",[e._v("for approximate tandem repetition, must be a string with the repetition motif (M), the number of motifs to insert (N) and the number of errors (E), in the format M:N:E")]),e._v(" "),a("li",[e._v("for translocation cut-paste and translocation copy-paste, must be a string with the haplotype (H), the chromosome (C), the breakpoint (B) and the orientation (O), in the format H:C:B:O. Breakpoint is the base immediately before the one where translocated region will be put")]),e._v(" "),a("li",[e._v("for reciprocal translocation, must be a string with the haplotype (H), the chromosome (C), the breakpoint (B), the orientation of the first region (OA) and the orientation of the second (OB), in the format H:C:B:OA:OB. Breakpoint specification follows the rule above")]),e._v(" "),a("li",[e._v("for SNP, must be a valid DNA nucleotide")]),e._v(" "),a("li",[e._v("for MNP, must be a string of valid DNA nucleotides")])])]),e._v(" "),a("li",[e._v("Column 6 contains the information for the length of a random, non-template sequence to add at start breakpoint. If 0, non-template sequence is not added.")])]),e._v(" "),a("p",[e._v("Once a BED is built and a reference FASTA is available, one can run HACk.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#VISOR HACk --help")]),e._v("\nVISOR HACk -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("HACK.BED"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" -g "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("REFERENCE.FASTA"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" -o "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("OUTPUTHACK"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),a("p",[e._v("For each BED provided, HACk generates a FASTA haplotype. Multiple FASTA haplotypes are generated also if a single BED is given but it contains informations about regions being translocated between different haplotypes. Use cases for HACk are described in the "),a("RouterLink",{attrs:{to:"/usecases/usecases.html"}},[e._v("Use cases section")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"visor-shorts-and-laser"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#visor-shorts-and-laser"}},[e._v("#")]),e._v(" VISOR SHORtS and LASeR")]),e._v(" "),a("p",[e._v("SHORtS and LASeR allow users to simulate Illumina paired-end short reads and Oxford Nanopore Technologies/Pacific Biosciences long reads from selected genomic regions (even entire chromosomes) once a proper file in BED-like format describing these regions, a FASTA reference template and a folder containing HACk output are provided.")]),e._v(" "),a("h3",{attrs:{id:"shorts-and-laser-bed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shorts-and-laser-bed"}},[e._v("#")]),e._v(" SHORtS and LASeR BED")]),e._v(" "),a("p",[e._v("SHORtS and LASeR require a BED with 5 columns, like the one provided "),a("a",{attrs:{href:"https://github.com/davidebolo1993/VISOR/blob/master/Examples/SHORtS.LASeR.bed",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(". Each entry describes a genomic region to simulate.")]),e._v(" "),a("ol",[a("li",[e._v("Column 1 contains the name of the chromosome")]),e._v(" "),a("li",[e._v("Column 2 contains the start coordinate")]),e._v(" "),a("li",[e._v("Column 3 contains the end coordinate")]),e._v(" "),a("li",[e._v("Column 4 contains the capture bias, a float percentage describing coverage fluctuations. For example, 100.0 describes a region without coverage fluctuations, while 80.0 describes a region covered by the 80% of the simulated coverage")]),e._v(" "),a("li",[e._v("Column 5 contains the purity, a float percentage describing normal in tumour contamination. For example, 100.0 describes a region without normal contamination, while 80.0 a region with 20% of the reads simulated from the corresponding normal reference")])]),e._v(" "),a("p",[e._v("Once a BED is built, one can run SHORtS or LASeR.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#VISOR SHORtS --help")]),e._v("\nVISOR SHORtS -s "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("OUTPUTHACK"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("SHORTS.LASER.BED"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" -g "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("REFERENCE.FASTA"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" -o "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("OUTPUTSHORTS"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#VISOR LASeR --help")]),e._v("\nVISOR LASeR -s "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("OUTPUTHACK"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("SHORTS.LASER.BED"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" -g "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("REFERENCE.FASTA"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" -o "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("OUTPUTLASER"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),a("p",[e._v("SHORtS and LASeR store in the output folder a sorted BAM. Use cases for SHORtS and LASeR are described in the "),a("RouterLink",{attrs:{to:"/usecases/usecases.html"}},[e._v("Use cases section")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"visor-xenia-beta"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#visor-xenia-beta"}},[e._v("#")]),e._v(" VISOR XENIA (BETA)")]),e._v(" "),a("p",[e._v("XENIA currently allows users to simulate "),a("a",{attrs:{href:"https://www.10xgenomics.com/linked-reads/",target:"_blank",rel:"noopener noreferrer"}},[e._v("10x Genomics linked reads"),a("OutboundLink")],1),e._v(" from selected genomic regions (even entire chromosomes) once a proper file in standard BED format describing these regions and a folder containing HACk output are provided.")]),e._v(" "),a("h3",{attrs:{id:"xenia-bed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xenia-bed"}},[e._v("#")]),e._v(" XENIA BED")]),e._v(" "),a("p",[e._v("XENIA requires a standard BED with 3 columns. Each entry describes a region to simulate.")]),e._v(" "),a("ol",[a("li",[e._v("Column 1 contains the name of the chromosome")]),e._v(" "),a("li",[e._v("Column 2 contains the start coordinate")]),e._v(" "),a("li",[e._v("Column 3 contains the end coordinate")])]),e._v(" "),a("p",[e._v("Once a BED is built, one can run XENIA.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#VISOR XENIA --help")]),e._v("\nVISOR XENIA -s "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("OUTPUTHACK"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("XENIA.BED"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" -o "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("OUTPUTXENIA"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),a("p",[e._v("Non-stadard BED with more than 3 columns (like the one described for SHORtS and LASeR) are also accepted but additional informations are simply ignored. XENIA stores in the output folder a FASTQ pair (R1-R2) for each haplotype in the HACk input folder (L001 for haplotype 1, L002 for haplotype 2, ...). FASTQ generated can be readily aligned with 10X aligner "),a("a",{attrs:{href:"https://support.10xgenomics.com/genome-exome/software/pipelines/latest/what-is-long-ranger",target:"_blank",rel:"noopener noreferrer"}},[e._v("Long Ranger"),a("OutboundLink")],1),e._v(". Use cases for XENIA are described in the "),a("RouterLink",{attrs:{to:"/usecases/usecases.html"}},[e._v("Use cases section")]),e._v(".")],1),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("Please be aware that XENIA is released as a BETA version and some issues may emerge while running; if so, please open an "),a("a",{attrs:{href:"https://github.com/davidebolo1993/VISOR/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue"),a("OutboundLink")],1),e._v(" or get in touch with me at davidebolognini7@gmail.com")])])])}),[],!1,null,null,null);t.default=o.exports}}]);